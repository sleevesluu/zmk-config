/*
 * Copyright (c) 2023 Andrew Kannan
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  | BKSP|BKSP|
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |  SHIFT  | MO(1)  |
            // |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  MO(1) |  CTL  |
            // ------------------------------------------------------------------------------------------

            bindings = <
&gresc     &kp N1    &kp N2  &kp N3    &kp N4  &kp N5  &kp N6     &kp N7  &kp N8  &kp N9     &kp N0    &kp MINUS           &kp EQUAL           &kp BSPC  &kp BSPC
&kp TAB    &kp Q     &kp W   &kp E     &kp R   &kp T   &kp Y      &kp U   &kp I   &kp O      &kp P     &kp LBKT            &kp RBKT                      &kp BSLH
&kp CLCK   &kp A     &kp S   &kp D     &kp F   &kp G   &kp H      &kp J   &kp K   &kp L      &kp SEMI  &kp SQT                                           &kp RET
&kp LSHFT            &kp Z   &kp X     &kp C   &kp V   &kp B      &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH            &mt RSHFT UP_ARROW            &mo 1
&kp LCTRL  &kp LGUI          &kp LALT                  &kp SPACE                             &mo 1     &mt RIGHT_ALT LEFT  &mt RIGHT_WIN DOWN            &mt RCTRL RIGHT
            >;
        };

        rgb_layer {
            // ------------------------------------------------------------------------------------------------
            // |    `   | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 |     | DEL  |
            // | EFCT REV|   |  UP |   | HUEUP | SATUP | BRIUP | SPDUP |      |  PGUP |    |     |    |       |
            // | EFCT FWD | LT |  DN  | RT | HUEDN | SATDN | BRIDN | SPDDN | HOME | PGDN | END  |  | BOOTLDR  |
            // |             |     |      |      |     |     |     |     |     |     |     |         |        |
            // |         |      |      |             TOG RGB                | PRT SCR |       |       |  MO(2)|
            // ------------------------------------------------------------------------------------------------

            bindings = <
&kp GRAVE        &kp F1    &kp F2    &kp F3     &kp F4           &kp F5           &kp F6           &kp F7           &kp F8    &kp F9             &kp F10          &kp F11   &kp F12        &trans  &kp DEL
&rgb_ug RGB_EFR  &trans    &kp UP    &trans     &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans    &kp PGUP           &kp PRINTSCREEN  &trans    &trans                 &trans
&rgb_ug RGB_EFF  &kp LEFT  &kp DOWN  &kp RIGHT  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &kp HOME  &kp PGDN           &kp END          &trans                           &bootloader
&trans                     &trans    &trans     &trans           &trans           &trans           &trans           &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &mo 2     &kp PG_UP              &trans
&trans           &trans              &tog 3                                       &rgb_ug RGB_TOG                                                &trans           &kp HOME  &kp PAGE_DOWN          &kp END
            >;
        };

        bluetooth_layer {
            // ------------------------------------------------------------------------------------------------
            // | BT CLR |     |     |     |     |     |     |     |     |     |     |    |    |       |       |
            // |  BT 1   |   |     |   |       |       |       |       |   |     |    |     |     |           |
            // |   BT 2   |    |      |    |       |       |       |       |      |      |      |  |   Reset  |
            // |    BT 3     |     |      |      |     |     |     |     |     |     |     |         |        |
            // |   BT 4  |      |      |                                    |         |       |       |       |
            // ------------------------------------------------------------------------------------------------

            bindings = <
&bt BT_CLR    &trans         &trans         &trans  &trans  &trans  &trans        &trans  &trans  &trans      &trans             &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_DISC 0  &trans         &trans  &trans  &trans  &trans        &trans  &trans  &trans      &ext_power EP_TOG  &trans  &trans          &trans
&bt BT_SEL 1  &bt BT_DISC 1  &trans         &trans  &trans  &trans  &trans        &trans  &trans  &trans      &trans             &trans                  &sys_reset
&bt BT_SEL 2                 &bt BT_DISC 2  &trans  &trans  &trans  &out OUT_TOG  &trans  &trans  &kp C_MUTE  &kp C_PLAY_PAUSE   &trans  &trans          &trans
&bt BT_SEL 3  &bt BT_DISC 3                 &trans                  &trans                                    &trans             &trans  &trans          &trans
            >;
        };

        arrows_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans                  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                            &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp UP_ARROW            &trans
&trans  &trans          &trans                  &trans                          &mo 1   &kp LEFT  &kp DOWN_ARROW          &kp RIGHT
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_bt {
            timeout-ms = <50>;
            key-positions = <59 52>;
            bindings = <&mo 2>;
        };

        LF1 {
            bindings = <&kt F1>;
            key-positions = <55 1>;
            timeout-ms = <1000>;
        };

        LF2 {
            bindings = <&kp F2>;
            key-positions = <55 2>;
            timeout-ms = <1000>;
        };

        LF3 {
            bindings = <&kp F3>;
            key-positions = <55 3>;
            timeout-ms = <1000>;
        };

        LF4 {
            bindings = <&kp F4>;
            key-positions = <55 4>;
            timeout-ms = <1000>;
        };

        LF5 {
            bindings = <&kp F5>;
            key-positions = <55 5>;
            timeout-ms = <1000>;
        };

        LF6 {
            bindings = <&kp F6>;
            key-positions = <55 6>;
            timeout-ms = <1000>;
        };

        LF7 {
            bindings = <&kp F7>;
            key-positions = <55 7>;
            timeout-ms = <1000>;
        };

        LF8 {
            bindings = <&kp F8>;
            key-positions = <55 8>;
            timeout-ms = <1000>;
        };

        LF9 {
            bindings = <&kp F9>;
            key-positions = <55 9>;
            timeout-ms = <1000>;
        };

        LF10 {
            bindings = <&kp F10>;
            key-positions = <55 10>;
            timeout-ms = <1000>;
        };

        LF11 {
            bindings = <&kp F11>;
            key-positions = <55 11>;
            timeout-ms = <1000>;
        };

        LF12 {
            bindings = <&kp F12>;
            key-positions = <55 12>;
            timeout-ms = <1000>;
        };

        LDEL {
            bindings = <&kp DEL>;
            key-positions = <55 13>;
            timeout-ms = <1000>;
        };

        RF1 {
            bindings = <&kt F1>;
            key-positions = <1 62>;
            timeout-ms = <1000>;
        };

        RF2 {
            bindings = <&kp F2>;
            key-positions = <2 62>;
            timeout-ms = <1000>;
        };

        RF3 {
            bindings = <&kp F3>;
            key-positions = <3 62>;
            timeout-ms = <1000>;
        };

        RF4 {
            bindings = <&kp F4>;
            key-positions = <4 62>;
            timeout-ms = <1000>;
        };

        RF5 {
            bindings = <&kp F5>;
            key-positions = <5 62>;
            timeout-ms = <1000>;
        };

        RF6 {
            bindings = <&kp F6>;
            key-positions = <6 62>;
            timeout-ms = <1000>;
        };

        RF7 {
            bindings = <&kp F7>;
            key-positions = <7 62>;
            timeout-ms = <1000>;
        };

        RF8 {
            bindings = <&kp F8>;
            key-positions = <8 62>;
            timeout-ms = <1000>;
        };

        RF9 {
            bindings = <&kp F9>;
            key-positions = <9 62>;
            timeout-ms = <1000>;
        };

        RF10 {
            bindings = <&kp F10>;
            key-positions = <10 62>;
            timeout-ms = <1000>;
        };

        RF11 {
            bindings = <&kp F11>;
            key-positions = <11 62>;
            timeout-ms = <1000>;
        };

        RF12 {
            bindings = <&kp F12>;
            key-positions = <12 62>;
            timeout-ms = <1000>;
        };

        RDEL {
            bindings = <&kp DEL>;
            key-positions = <13 62>;
            timeout-ms = <1000>;
        };
    };
};
